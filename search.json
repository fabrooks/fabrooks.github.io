[
  {
    "objectID": "waterfrontzoningmap.html",
    "href": "waterfrontzoningmap.html",
    "title": "Waterfront Zoning",
    "section": "",
    "text": "New York City’s waterfront is defined by its constant change, ever shifting to fit the needs of the city. The below map tries to help explain the current state of the waterfront as well as explore historical imagery of how the waterfront used to exist.\nThe map below shows the current zoning for areas that exist close to NYC’s water features as well as the water features themselves. Information on the water sources and the zoning types can be discovered by hovering over each section.\nIf you find yourself interested in additional NYC zoning laws, I’ve added one more layer which covers all of the special districts of NYC which are created for very specific reasons. All districts, regardless of proximity to water, have been included to show just how many of these districts special uses are based on the waterfront.\n\n    \n\n    \n\n    \n    \n    \n    \n    \n\n\n\n\n\n\nThe area around the Brooklyn Waterfront has changed dramatically over the course of history. If you click into the top right of the map and select one of the old historical maps you can see an aerial view of the city from that time and below you will see an example of how the Brooklyn waterfront would have looked at the time!\nTake special note of how much the area around Brooklyn Bridge Park has changed in just one century, from a bustling port, to an abandoned dilapidated pier, to an exciting modern park!"
  },
  {
    "objectID": "waterfrontzoningmap.html#new-york-citys-changing-waterfront",
    "href": "waterfrontzoningmap.html#new-york-citys-changing-waterfront",
    "title": "Waterfront Zoning",
    "section": "",
    "text": "New York City’s waterfront is defined by its constant change, ever shifting to fit the needs of the city. The below map tries to help explain the current state of the waterfront as well as explore historical imagery of how the waterfront used to exist.\nThe map below shows the current zoning for areas that exist close to NYC’s water features as well as the water features themselves. Information on the water sources and the zoning types can be discovered by hovering over each section.\nIf you find yourself interested in additional NYC zoning laws, I’ve added one more layer which covers all of the special districts of NYC which are created for very specific reasons. All districts, regardless of proximity to water, have been included to show just how many of these districts special uses are based on the waterfront.\n\n    \n\n    \n\n    \n    \n    \n    \n    \n\n\n\n\n\n\nThe area around the Brooklyn Waterfront has changed dramatically over the course of history. If you click into the top right of the map and select one of the old historical maps you can see an aerial view of the city from that time and below you will see an example of how the Brooklyn waterfront would have looked at the time!\nTake special note of how much the area around Brooklyn Bridge Park has changed in just one century, from a bustling port, to an abandoned dilapidated pier, to an exciting modern park!"
  },
  {
    "objectID": "lettertomayor.html",
    "href": "lettertomayor.html",
    "title": "Open Letter",
    "section": "",
    "text": "viewof strRecipient = Inputs.text({label: \"Recipient Name\"})\nviewof strAuthor = Inputs.text({label: \"Sender Name\"})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDear Mayor ,\nI am writing today to spread awareness of an imminent threat facing new york city, storm surges. Did you know that, right now, 361 census tracts are under threat of storm surge in New York City? And not only that, it is projected that by the year 2080 that number will nearly double to 612 census tracts under threat of storm surge. That’s over a quarter of the city! Just look at how bad it’s going to be!\n\n\n\nimage\n\n\nJust kidding! But while I don’t think it’s going to be as bad as it is in the movies, storm surges and flooding are already wreaking havoc in the city. Below is a news story from 2023 about dangers from storms in the city.\n\n\nAs you can see this is a major problem for both the future of NYC and the present day. Below is a list of items that I think the city should take to reduce the threat of storm surges\n\nHousing improvements. Buildings that exist in areas that have the potential for storm surges in the future should be updated to be able to handle those storms.\nAwareness. Residents in zones that are at risk for storm surges should be made aware of the risks in case of future emergencies.\nEngineering. Create additional ways for the city to allow water to runoff such as underground tanks. This allows the city to deal with excess water during a storm.\n\nI have also created a dashboard that displays the census tracts that are under risk and the severity of the potential for storm surges. The link to that storm surge dashboard can be found here\nIf you wish to look further into this issue and explore the data for yourself, the data can be found from the NYC open data site here\nSincerely,"
  },
  {
    "objectID": "dashboard.html",
    "href": "dashboard.html",
    "title": "Dashboard",
    "section": "",
    "text": "Below is a map that I created that shows a census tract breakdown of storm surge risks. Click on any of the census tracts to see additional storm surge data!"
  },
  {
    "objectID": "dashboard.html#storm-surge-dashes",
    "href": "dashboard.html#storm-surge-dashes",
    "title": "Dashboard",
    "section": "",
    "text": "Below is a map that I created that shows a census tract breakdown of storm surge risks. Click on any of the census tracts to see additional storm surge data!"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I am currently in my first year of the GeoInformatics MS program at Hunter College. My intended specialty is working with spatial databases but I’m happily exploring everything the geospatial world has to offer!\n\n\nAs it says on the front page of this website, the work that I like to do is largely database work. I currently work as an analytics engineer for the Natural Resources Defense Council helping run their database for operations. I am enrolled in this geoinformatics program to be able to offer extended help to the organization with geospatial data!\nOne of my greatest passions is swimming, especially open water swimming! New York City is a superb locale for getting out into the water (well maybe not the Hudson after it rains) and during the summer you can find me at Brighton Beach every weekend swimming between Tatiana’s and the Coney Island Pier.\nMy passion for the water influences the geospatial data that I find most interesting which is the city’s changing waterfront and its relationship with the waters that surround it. Come talk waterfront with me!\n\n\n\nRight now I maintain two branches on github for the repository fabrooks.github.io.\nThe first is the main branch and that contains the entire project including it’s quarto files. My workflow here is to\n\ngit add .\ngit commit -m “whatever I changed”\ngit push origin main\n\nAfterI’ve pushed the original code I then push the _site folder as its own independent branch that github pages uses to create my website!\n\ngit subtree push –prefix _site origin gh-pages\n\nAnd voila! My site is updated!"
  },
  {
    "objectID": "about.html#my-interests-personal-and-academic",
    "href": "about.html#my-interests-personal-and-academic",
    "title": "About",
    "section": "",
    "text": "As it says on the front page of this website, the work that I like to do is largely database work. I currently work as an analytics engineer for the Natural Resources Defense Council helping run their database for operations. I am enrolled in this geoinformatics program to be able to offer extended help to the organization with geospatial data!\nOne of my greatest passions is swimming, especially open water swimming! New York City is a superb locale for getting out into the water (well maybe not the Hudson after it rains) and during the summer you can find me at Brighton Beach every weekend swimming between Tatiana’s and the Coney Island Pier.\nMy passion for the water influences the geospatial data that I find most interesting which is the city’s changing waterfront and its relationship with the waters that surround it. Come talk waterfront with me!"
  },
  {
    "objectID": "about.html#how-this-site-is-maintained",
    "href": "about.html#how-this-site-is-maintained",
    "title": "About",
    "section": "",
    "text": "Right now I maintain two branches on github for the repository fabrooks.github.io.\nThe first is the main branch and that contains the entire project including it’s quarto files. My workflow here is to\n\ngit add .\ngit commit -m “whatever I changed”\ngit push origin main\n\nAfterI’ve pushed the original code I then push the _site folder as its own independent branch that github pages uses to create my website!\n\ngit subtree push –prefix _site origin gh-pages\n\nAnd voila! My site is updated!"
  },
  {
    "objectID": "codesnippets.html",
    "href": "codesnippets.html",
    "title": "Code Samples",
    "section": "",
    "text": "This page shows a series of coding challenges that I’ve worked on for my WebGIS class! They are all interactive so feel free to play around! I’ve included all of the code (press the code buttons to expand and see the code) so you can check it out! Let me know if any of them aren’t working as expected or if there’s a better way to approach a problem!"
  },
  {
    "objectID": "codesnippets.html#countdown-to-world-cup-2026",
    "href": "codesnippets.html#countdown-to-world-cup-2026",
    "title": "Code Samples",
    "section": "Countdown to World Cup 2026!",
    "text": "Countdown to World Cup 2026!\nBelow is a function that will tell you the length of time until the next world cup from today! The output shows a running output of the time until that date formatted as years:weeks:days:hours:minutes:seconds!\n\n\nCode\nviewof worldCupDateV = Inputs.datetime({label: \"2026 World Cup Final\", value: \"2026-07-19T16:00\"});\n\n\nfunction getDaysCount() {\n  // Calculate time segments in milliseconds\n  const second = 1000;\n  const minute = 1000 * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const week = day * 7;\n  const year = day * 365;\n  let d = new Date();\n  //Set array of time segment and initiate empty variables\n  let datesArray = [year, week, day, hour, minute, second], diffTimesArray = [], diffTime = 0;\n  //Time in milliseconds between the world cup and now\n  let worldCupTime = worldCupDateV.getTime();\n  let dateDiff = worldCupTime - d.getTime();\n\n  // Iterate through all of date types\n  for(var i = 0; i &lt; datesArray.length; i++) {\n    //Get the value for the type of time segment\n    diffTime = Math.floor(dateDiff / datesArray[i]);\n    //Add the value for that date type to the diffTimesArray\n    diffTimesArray.push(diffTime);\n    //Remove the time caluclated by the previous step. \n    //E.g. if it's one year away, remove one year's worth of time from the date difference\n    dateDiff = dateDiff - (diffTime * datesArray[i]);\n  }\n  document.getElementById(\"dateTimer\").innerHTML = diffTimesArray.join(\":\") + ' is the current time until the World Cup!';\n  //return diffTimesArray.join(\":\") + ' is the current time until the World Cup!';\n}\n//yield Promises.tick(1000, getDaysCount())\nmyInterval = setInterval(getDaysCount, 1000);\n//If the code below is not included then this code block is rerun and multiple timers are active with different dates\ninvalidation.then(() =&gt; clearInterval(myInterval));"
  },
  {
    "objectID": "codesnippets.html#soundex",
    "href": "codesnippets.html#soundex",
    "title": "Code Samples",
    "section": "Soundex",
    "text": "Soundex\nBelow is a function that takes a word and returns the soundex return for that word! If you’d like, you can even type in a comma separated list and receive the soundex for every word in the list!\n\n\nCode\nviewof nameVar = Inputs.text({label: \"Name\", value: \"Washington\"})\n\nfunction soundex(name)\n{\n    let s = [];\n    let si = 1;\n    let c;\n\n    //              ABCDEFGHIJKLMNOPQRSTUVWXYZ\n    let mappings = \"01230120022455012623010202\";\n\n    s[0] = name[0].toUpperCase();\n\n    for(let i = 1, l = name.length; i &lt; l; i++)\n    {\n        c = (name[i].toUpperCase()).charCodeAt(0) - 65;\n\n        if(c &gt;= 0 && c &lt;= 25)\n        {\n            if(mappings[c] != '0')\n            {\n                if(mappings[c] != s[si-1])\n                {\n                    s[si] = mappings[c];\n                    si++;\n                }\n\n                if(si &gt; 3)\n                {\n                    break;\n                }\n            }\n        }\n    }\n\n    if(si &lt;= 3)\n    {\n        while(si &lt;= 3)\n        {\n            s[si] = '0';\n            si++;\n        }\n    }\n\n    return s.join(\"\");\n} \n\nfunction soundexNames(listOfNames) {\n  let soundexDict = []\n  let arrayOfNames = listOfNames.trim().split(',').map(x =&gt; x.trim())\n  for(var i = 0; i &lt; arrayOfNames.length; i++) {\n    soundexDict.push(soundex(arrayOfNames[i]))\n  }\n  return soundexDict.join(\", \")\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n is the soundex array for"
  },
  {
    "objectID": "codesnippets.html#word-joins",
    "href": "codesnippets.html#word-joins",
    "title": "Code Samples",
    "section": "Word Joins",
    "text": "Word Joins\nBelow is a function that takes a comma separated list of names and returns the list in a much nicer format!\n\n\nCode\nviewof multiNameVar = Inputs.text({label: \"Name\", value: \"   Washington,Adams,Jefferson\"})\n\n\n\n\n\n\n\n\n\nCode\nfunction printMultiNames(multiNames) {\n  // Get list of names and initiate variables\n  let nameArray = multiNames.trim().split(',').map(x =&gt; x.trim())\n  let joinedNames = '', finalName = '';\n  \n  if  (nameArray.length == 1) {\n    // if list of names = 1 return just the string\n    joinedNames = nameArray[0];\n  } else if (nameArray.length == 2) {\n    // If list of names = 2 return the two values separated by and\n    finalName = nameArray.pop()\n    joinedNames = nameArray.join(\", \") + \" and \" + finalName;\n  }else {\n    // If list of names = 2 return up to the last element joined with commas and then join in the last element with \"and\"\n    finalName = nameArray.pop()\n    joinedNames = nameArray.join(\", \") + \", and \" + finalName;\n  }\n  \n  // return nameArray.join(\", \");\n  return joinedNames\n}"
  },
  {
    "objectID": "codesnippets.html#beatify-rank-joins",
    "href": "codesnippets.html#beatify-rank-joins",
    "title": "Code Samples",
    "section": "Beatify Rank Joins",
    "text": "Beatify Rank Joins\nHere is a function that takes a ranking between 1 and 12 and returns how it would be viewed both in Text formats, e.g. first, or in numeric formats, e.g. 1st.\n\n\nCode\nviewof inputNum = Inputs.range([1, 12], {step: 1, label: \"Rank\",})\nviewof inputsTextType = Inputs.radio([\"Text\", \"Numeric\"], {label: \"Text output style\", value: \"Text\"})\n\n\nfunction beautifyRank(num, textType) {\n  let textArray = ['First','Second','Third','Fourth','Fifth','Sixth','Seventh','Eighth','Ninth','Tenth','Eleventh','Twelfth'];\n  let numericArray = ['1st','2nd','3rd','4th','5th','6th','7th','8th','9th','10th','11th','12th'];\n  let BeautifiedText = (textType == 'Text') ? textArray[num-1] : numericArray[num-1];\n  return BeautifiedText;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n is the  format for rank"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "WebGIS Arthur Brooks",
    "section": "",
    "text": "Welcome to my Quarto website! This site is dedicated to the projects that I create in WebGIS at Hunter College!\n\n\n\nimage\n\n\nThis site is currently a work in progress so check back later for more updates! Happy mapping!\nThe site is hosted on github and running via github pages. The site was created using quarto."
  },
  {
    "objectID": "stormsurgedata.html",
    "href": "stormsurgedata.html",
    "title": "Data",
    "section": "",
    "text": "Here is a link to the data that I used for the mapping project!"
  }
]